/*
 * QualityChecker4Pbl for Sonar
 * Copyright (C) 2013 QualiteSys
 * dev@sonar.codehaus.org
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02
 */

package com.qualitesys.sonarqcr4pblplugin.pbl;

import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

public final class QcrKeywords {

  private QcrKeywords() {
  }

  public static Set<String> get() {
    String[] qcrKeywords = {

   "alias",
   "Alias",
   "ALIAS",
   "and",
   "And",
   "AND",
   "any",
   "assert",
   "autoinstantiate",
   "Blob",
   "BLOB",
   "boolean",
   "Boolean",
   "break",
   "call",
   "case",
   "Case",
   "CASE",
   "catch",
   "CATCH",
   "char",
   "character",
   "choose",
   "Choose",
   "CHOOSE",
   "class",
   "close",
   "Close",
   "CLOSE",
   "connect",
   "Connect",
   "CONNECT",
   "connectprivilege",
   "constant",
   "Constant",
   "CONSTANT",
   "continue",
   "Continue",
   "create",
   "Create",
   "CREATE",
   "cursor",
   "CURSOR",
   "datawindow",
   "date",
   "datetime",
   "decimal",
   "declare",
   "DECLARE",
   "delete",
   "DELETE",
   "describe",
   "DESCRIBE",
   "descriptor",
   "DESCRIPTOR",
   "destroy",
   "Destroy",
   "DESTROY",
   "disconnect",
   "Disconnect",
   "DISCONNECT",
   "do",
   "Do",
   "DO",
   "double",
   "dynamic",
   "Dynamic",
   "DYNAMIC",
   "dynamicdescriptionarea",
   "dynamicstagingarea",
   "else",
   "Else",
   "ELSE",
   "elseif",
   "Elseif",
   "ElseIf",
   "ELSEIF",
   "end",
   "End",
   "END",
   "enum",
   "environment",
   "error",
   "event",
   "Event",
   "EVENT",
   "execute",
   "EXECUTE",
   "extends",
   "false",
   "False",
   "fetch",
   "Fetch",
   "final",
   "finally",
   "for",
   "For",
   "FOR",
   "forward",
   "from",
   "FROM",
   "function",
   "Function",
   "FUNCTION",
   "global",
   "Global",
   "GLOBAL",
   "goto",
   "GOTO",
   "HALT",
   "if",
   "If",
   "IF",
   "immediate",
   "IMMEDIATE",
   "implements",
   "import",
   "insert",
   "INSERT",
   "instanceof",
   "int",
   "integer",
   "Integer",
   "interface",
   "into",
   "INTO",
   "is",
   "Is",
   "IS",
   "library",
   "Library",
   "LIBRARY",
   "long",
   "Long",
   "LONG",
   "loop",
   "Loop",
   "LOOP",
   "menu",
   "message",
   "new",
   "next",
   "Next",
   "NEXT",
   "not",
   "Not",
   "NOT",
   "null",
   "Null",
   "number",
   "OleObject",
   "OLEObject",
   "on",
   "open",
   "Open",
   "OPEN",
   "or",
   "Or",
   "OR",
   "package",
   "Post",
   "POST",
   "powerobject",
   "prepare",
   "PREPARE",
   "private",
   "Private",
   "PRIVATE",
   "protected",
   "Protected",
   "PROTECTED",
   "prototypes",
   "public",
   "Public",
   "PUBLIC",
   "readonly",
   "real",
   "ref",
   "Ref",
   "REF",
   "release",
   "retrieve",
   "return",
   "Return",
   "RETURN",
   "runtimeerror",
   "RuntimeError",
   "select",
   "SELECT",
   "selectblob",
   "SELECTBLOB",
   "set",
   "SET",
   "settransobject",
   "shared",
   "sqlca",
   "sqlda",
   "sqlsa",
   "static",
   "step",
   "STEP",
   "string",
   "String",
   "subroutine",
   "Subroutine",
   "SubRoutine",
   "SUBROUTINE",
   "super",
   "synchronized",
   "then",
   "Then",
   "THEN",
   "this",
   "This",
   "THIS",
   "throw",
   "throwable",
   "Throwable",
   "throws",
   "THROWS",
   "time",
   "to",
   "To",
   "TO",
   "transaction",
   "treeviewitem",
   "true",
   "True",
   "try",
   "TRY",
   "type",
   "uint",
   "ulong",
   "uLong",
   "ULong",
   "unsignedint",
   "UnsignedInt",
   "unsignedinteger",
   "UnsignedInteger",
   "unsignedlong",
   "UnsignedLong",
   "until",
   "Until",
   "UNTIL",
   "update",
   "UPDATE",
   "updateblob",
   "UPDATEBLOB",
   "using",
   "Using",
   "USING",
   "values",
   "VALUES",
   "variables",
   "void",
   "where",
   "WHERE",
   "while",
   "While",
   "WHILE",
   "window",
   "within",


    };
    Set<String> keywords = new HashSet<String>();
    Collections.addAll(keywords, qcrKeywords);
    return keywords;
  }
}
